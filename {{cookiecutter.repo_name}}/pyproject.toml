[tool.poetry]
name = "{{ cookiecutter.project_name }}"
version = "0.1.0"
description = "{{ cookiecutter.description }}"
authors = []
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.109.0"
uvicorn = "^0.26.0"
celery = "^5.3.6"
redis = "^5.0.1"
greenlet = "^3.0.3"
sqlalchemy = "^2.0.25"
asyncpg = "^0.29.0"
alembic = "^1.13.1"
pydantic-settings = "^2.1.0"
ddtrace = "^2.4.1"
aiokafka = "^0.10.0"
sentry-sdk = "^1.39.2"
structlog = "^24.1.0"
asgi-correlation-id = "^4.3.1"


[tool.poetry.group.dev.dependencies]
ruff = "^0.1.13"
mypy = "^1.8.0"
pytest = "^8.0.2"
pytest-cov = "^4.1.0"
pytest-env = "^1.1.3"
pytest-asyncio = "^0.23.5"
httpx = "^0.27.0"
pre-commit = "^3.6.2"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.mypy]
python_version = "3.11"
warn_return_any = false
warn_unused_configs = true
exclude = [
    "alembic",
    "scripts",
    "tests",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.2"
log_level = "ERROR"
addopts = """
    -ra
    --cov=app
    --cov-fail-under=80
    --cov-report term-missing:skip-covered
    --cov-report xml
    --durations=10
    --durations-min=1
    --maxfail=5
    --verbose
"""
# enable async mode
asyncio_mode = "auto"
# ignore DeprecationWarning
filterwarnings = "ignore::DeprecationWarning"
testpaths = ["tests"]
python_files = "test_*.py"
junit_duration_report = "call"
# set environment for testing
env = [
    "TESTING=true",
]

[tool.coverage.run]
branch = true
omit = [
    "alembic/*",
    "tests/*",
    "app/config/*",
    "app/main.py",
]
source = ["app"]
relative_files = true

[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_also = [
    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",

    # Don't complain if non-runnable code isn't run:
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",

    # Don't complain about abstract methods, they aren't run:
    "@(abc\\.)?abstractmethod",
]
ignore_errors = true
