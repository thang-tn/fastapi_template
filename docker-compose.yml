version: '5'

volumes:
  pg_data:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local

services:
  zookeeper:
    image: docker.io/bitnami/zookeeper:3.9
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper_data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: docker.io/bitnami/kafka:3.6
    ports:
      - "9093:9093"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ZOOKEEPER_PROTOCOL: PLAINTEXT
      ALLOW_PLAINTEXT_LISTENER: yes
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: "CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT"
      KAFKA_CFG_LISTENERS: "CLIENT://:9092,EXTERNAL://:9093"
      KAFKA_CFG_ADVERTISED_LISTENERS: "CLIENT://kafka:9092,EXTERNAL://kafka:9092"
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: CLIENT
    depends_on:
      - zookeeper

  postgres:
    image: postgres:16
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: fastapi

  redis:
    image: redis
    ports:
      - "6379:6379"

  web-api:
    image: fastapi-app:latest
    build:
      context: .
      dockerfile: Dockerfile
    command: "uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload"
    ports:
      - "8000:8000"
    depends_on:
      - postgres
    environment:
      CELERY_BROKER_URL: "redis://redis:6379"
      CELERY_RESULT_BACKEND: "redis://redis:6379"
      DATABASE_URL: postgresql+asyncpg://postgres:password@postgres:5432/fastapi
      JSON_LOG_ENABLED: false

  consumer:
    image: fastapi-app:latest
    volumes:
      - .:/project
    command: "python -m app.consumer"
    environment:
      DEBUG: false
      CELERY_BROKER_URL: "redis://redis:6379"
      CELERY_RESULT_BACKEND: "redis://redis:6379"
      KAFKA_BROKERS_TLS: kafka:9092
      KAFKA_SECURITY_PROTOCOL: PLAINTEXT

  celery:
    image: fastapi-app:latest
    depends_on:
      - redis
    volumes:
      - .:/project
    command: 'celery -A app.worker worker -l info -Q sample_queue -c 1'
    environment:
      CELERY_BROKER_URL: "redis://redis:6379"
      CELERY_RESULT_BACKEND: "redis://redis:6379"
      DATABASE_URL: postgresql+asyncpg://postgres:password@postgres:5432/fastapi
      KAFKA_BROKERS_TLS: kafka:9092
      KAFKA_SECURITY_PROTOCOL: PLAINTEXT
