version: '5'

volumes:
  pg_data:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local

services:
  zookeeper:
    image: docker.io/bitnami/zookeeper:3.9
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper_data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: docker.io/bitnami/kafka:3.6
    ports:
      - "9093:9093"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ZOOKEEPER_PROTOCOL=PLAINTEXT
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://kafka:9092
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
    depends_on:
      - zookeeper

  postgres:
    image: ankane/pgvector
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${DATABASE__USER}
      POSTGRES_PASSWORD: ${DATABASE__PASSWORD}
      POSTGRES_DB: ${DATABASE__NAME}

  redis:
    image: redis
    ports:
      - "6379:6379"

  webapp:
    build:
      context: .
      dockerfile: Dockerfile
    command: "uvicorn main:app --host 0.0.0.0 --port 8000 --reload"
    ports:
      - "8888:8000"
    volumes:
      - .:/fastapi-app
    depends_on:
      - postgres
    environment:
      CELERY_BROKER_URL: "redis://redis:6379"
      CELERY_RESULT_BACKEND: "redis://redis:6379"
      DATABASE__HOST: postgres
      DATABASE__USER: ${DATABASE__USER}
      DATABASE__PASSWORD: ${DATABASE__PASSWORD}
      DATABASE__NAME: ${DATABASE__NAME}

  kafka-consumer:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/fastapi-app
    command: "python -m app.consumer"
    environment:
      CELERY_BROKER_URL: "redis://redis:6379"
      CELERY_RESULT_BACKEND: "redis://redis:6379"
      KAFKA__BROKERS_TLS: kafka:9092
      KAFKA__SECURITY_PROTOCOL: PLAINTEXT

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - redis
    volumes:
      - .:/fastapi-app
    command: 'celery -A app.worker worker -l info -Q smartmatch'
    environment:
      CELERY_BROKER_URL: "redis://redis:6379"
      CELERY_RESULT_BACKEND: "redis://redis:6379"
      DATABASE__HOST: postgres
      DATABASE__USER: ${DATABASE__USER}
      DATABASE__PASSWORD: ${DATABASE__PASSWORD}
      DATABASE__NAME: ${DATABASE__NAME}
